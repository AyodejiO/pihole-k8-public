apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
    role: primary
  name: pihole-rw
  namespace: pihole
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
        role: primary
    spec:
      dnsPolicy: Default
      restartPolicy: Always
      volumes:
        - name: pihole-config
          persistentVolumeClaim:
            claimName: pihole-pvc-pihole
        - name: pihole-dnsmasq
          persistentVolumeClaim:
            claimName: pihole-pvc-dnsmasq
        - name: pihole-custom-list
          configMap:
            name: pihole-custom-list
        - name: pihole-adlists-list
          configMap:
            name: pihole-adlists-list
        - name: pihole-dnsmasq-config
          configMap:
            name: pihole-dnsmasq-supplementary
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                - key: storage
                  operator: In
                  values:
                  - nvme
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: pihole
                topologyKey: topology.kubernetes.io/rack
      initContainers:
        - name: create-dnsmasq-config
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - cp /config/99-wildcard.conf /etc/dnsmasq.d/99-wildcard.conf;
          volumeMounts:
            - name: pihole-dnsmasq-config
              mountPath: /config
            - mountPath: /etc/dnsmasq.d
              name: pihole-dnsmasq
      containers:
        - name: cloudflared
          image: visibilityspots/cloudflared
          env:
            - name: PORT
              value: "5053"
          resources:
            requests:
              memory: "50Mi"
              cpu: "250m"
            limits:
              memory: "100Mi"
              cpu: "500m"
        - name: pihole
          image: pihole/pihole:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: "50Mi"
              cpu: "250m"
            limits:
              memory: "100Mi"
              cpu: "500m"
          env:
            - name: TZ
              value: Europe/London
            - name: WEBPASSWORD
              value: nojunk
            - name: PIHOLE_DNS_
              value: 127.0.0.1#5053;1.1.1.1;1.0.0.1;8.8.8.8
            - name: DNSMASQ_LISTENING
              value: all
            - name: FTLCONF_CHECK_DISK
              value: "0"
            - name: WEBTHEME
              value: lcars
            - name: VIRTUAL_HOST
              value: pihole.kintbury
            - name: PROXY_LOCATION
              value: pihole
            - name: VIRTUAL_PORT
              value: "80"
            - name: FTLCONF_LOCAL_IPV4
              value: "10.0.0.120"
          ports:
            - containerPort: 53
              name: pihole-dns-tcp
              protocol: TCP
            - containerPort: 53
              name: pihole-dns-udp
              protocol: UDP
            - containerPort: 80
              name: http
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/pihole
              name: pihole-config
            - mountPath: /etc/pihole/custom.list
              name: pihole-custom-list
              subPath: custom.list
            - mountPath: /etc/pihole/adlists.list
              name: pihole-adlists-list
              subPath: adlists.list
            - mountPath: /etc/dnsmasq.d
              name: pihole-dnsmasq
          livenessProbe:
            exec:
              command:
              - dig
              - "@127.0.0.1"
              - google.com
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
              - dig
              - "@127.0.0.1"
              - google.com
            initialDelaySeconds: 30
            periodSeconds: 10
